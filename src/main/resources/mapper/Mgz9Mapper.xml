<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.da.mapper.Mgz9Mapper">

		
	<select id="searchMgzhomeIstList" resultType="hashMap" parameterType="hashMap">
	/* MGZ9 홈 리스트 */
		SELECT
			 MGZ_SQ             as mgzSq          
			,MBR_SQ             as mbrSq          
			,MGZ_TITLE          as mgzTitle       
			,MGZ_DESCRPTN       as mgzDescrptn       
			,MGZ_MAIN_IMG_URL   as mgzMainImgUrl
			,MGZ_TYP_CD         as mgzTypCd      
			,REG_MBR_SQ         as regMbrSq      
			,REG_DT             as regDt     
			,DATE_FORMAT(REG_DT, '%Y.%m.%d')			as regDate      
			,UPDT_MBR_SQ        as updtMbrSq     
			,UPDT_DT            as updtDt         
			,DEL_YN             as delYn          
			,USE_YN             as useYn     
			,MGZ_CONTENT        as mgzContent     
		FROM TBL_DA_MGZ_M
		WHERE (USE_YN = 'Y' AND DEL_YN = 'N')
		AND MGZ_TYP_CD = #{mgzTypCd}
		ORDER BY  
		CASE 
	        WHEN (SELECT PROMO_OD_DIV_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 10) = 'REG' 
	        AND (SELECT PROMO_OD_TYP_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 10) = 'ASC' 
	        THEN REG_DT
	        END ASC,
	    CASE 
	        WHEN (SELECT PROMO_OD_DIV_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 10) = 'REG' 
	        AND (SELECT PROMO_OD_TYP_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 10) = 'DES' 
	        THEN REG_DT
	        END DESC
		<if test='mgzTypCd.equals("MDA")'>
		LIMIT 4
		</if>
		<if test='mgzTypCd.equals("IST")'>
		LIMIT 4
		</if>
		
	</select>
	
	
	<select id="searchMgzhomeMdaList" resultType="hashMap" parameterType="hashMap">
	/* MGZ9 홈 리스트 */
		SELECT
			 MGZ_SQ             as mgzSq          
			,MBR_SQ             as mbrSq          
			,MGZ_TITLE          as mgzTitle       
			,MGZ_DESCRPTN       as mgzDescrptn       
			,MGZ_MAIN_IMG_URL   as mgzMainImgUrl
			,MGZ_TYP_CD         as mgzTypCd      
			,REG_MBR_SQ         as regMbrSq      
			,REG_DT             as regDt     
			,DATE_FORMAT(REG_DT, '%Y.%m.%d')			as regDate      
			,UPDT_MBR_SQ        as updtMbrSq     
			,UPDT_DT            as updtDt         
			,DEL_YN             as delYn          
			,USE_YN             as useYn     
			,MGZ_CONTENT        as mgzContent     
		FROM TBL_DA_MGZ_M
		WHERE (USE_YN = 'Y' AND DEL_YN = 'N')
		AND MGZ_TYP_CD = #{mgzTypCd}
		ORDER BY 
		CASE 
	        WHEN (SELECT PROMO_OD_DIV_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 11) = 'REG' 
	        AND (SELECT PROMO_OD_TYP_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 11) = 'ASC' 
	        THEN REG_DT
	        END ASC,
	    CASE 
	        WHEN (SELECT PROMO_OD_DIV_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 11) = 'REG' 
	        AND (SELECT PROMO_OD_TYP_CD FROM TBL_DA_PROMO_MGMT_S WHERE PROMO_SQ = 11) = 'DES' 
	        THEN REG_DT
	        END DESC
		<if test='mgzTypCd.equals("MDA")'>
		LIMIT 4
		</if>
		<if test='mgzTypCd.equals("IST")'>
		LIMIT 4
		</if>
		
	</select>
	
	
	<select id="searchHomeBnnList" resultType="hashMap">
		/* 커뮤니티 홈 배너 조회 */
		SELECT A.BNN_SQ AS bnnSq,
			   A.BNN_TITLE AS bnnTitle,
			   A.BNN_MP_IMG_URL AS bnnMpImgUrl,
			   A.BNN_EP_IMG_URL AS bnnEpImgUrl,
			   A.BNN_MM_IMG_URL AS bnnMmImgUrl,
			   A.BNN_EM_IMG_URL AS bnnEmImgUrl,
			   A.BNN_M_LND_URL AS bnnMLndUrl,
			   A.BNN_E_LND_URL AS bnnELndUrl,
			   DATE_FORMAT(A.BNN_START_DT, '%Y.%m.%d') AS bnnStartDt,
			   DATE_FORMAT(A.BNN_END_DT, '%Y.%m.%d') AS bnnEndDt
		  FROM TBL_DA_BNN_MGMT_M A		  	 
		 WHERE A.BNN_DIV_CD = #{bnnDivCd}
		   AND A.USE_YN = 'Y'
		   AND A.DEL_YN = 'N'
		 ORDER BY A.BNN_END_DT DESC
		 LIMIT 1
	</select>

	<select id="selectMgz9List" resultType="hashMap" parameterType="hashMap">
	/* MGZ9 리스트 */
		SELECT
			 MGZ_SQ             as mgzSq          
			,MBR_SQ             as mbrSq          
			,MGZ_TITLE          as mgzTitle       
			,MGZ_DESCRPTN       as mgzDescrptn       
			,MGZ_MAIN_IMG_URL   as mgzMainImgUrl
			,MGZ_TYP_CD         as mgzTypCd      
			,REG_MBR_SQ         as regMbrSq      
			,REG_DT             as regDt     
			,DATE_FORMAT(REG_DT, '%Y.%m.%d')			as regDate      
			,UPDT_MBR_SQ        as updtMbrSq     
			,UPDT_DT            as updtDt         
			,DEL_YN             as delYn          
			,USE_YN             as useYn     
			,MGZ_CONTENT        as mgzContent     
		FROM TBL_DA_MGZ_M
		WHERE (USE_YN = 'Y' AND DEL_YN = 'N')
		AND MGZ_TYP_CD = #{mgzTypCd}
		ORDER BY MGZ_SQ DESC
		LIMIT #{pagestart} , #{page}
	</select>
	
	<select id="selectMgz9Dtl" resultType="hashMap" parameterType="String">
	/* MGZ9 리스트 */
		SELECT
			 MGZ_SQ             as mgzSq          
			,MBR_SQ             as mbrSq          
			,MGZ_TITLE          as mgzTitle      
			,MGZ_DESCRPTN       as mgzDescrptn       
			,MGZ_CONTENT        as mgzContent     
			,MGZ_MAIN_IMG_URL   as mgzMainImgUrl
			,MGZ_TYP_CD         as mgzTypCd      
			,REG_MBR_SQ         as regMbrSq      
			,REG_DT             as regDt          
			,UPDT_MBR_SQ        as updtMbrSq     
			,UPDT_DT            as updtDt
			,DEL_YN             as delYn          
			,USE_YN             as useYn          
		FROM TBL_DA_MGZ_M
		WHERE (USE_YN = 'Y' AND DEL_YN = 'N')
		AND MGZ_SQ = #{mgzSq}
		ORDER BY MGZ_SQ DESC
	</select>
	
	<!-- <select id="result" resultType="hashMap" parameterType="hashMap">
		SELECT
			 ARTST_SQ                as artstSq          
			,MBR_SQ                  as mbrSq          
			,ARTST_ACTVTY_NM         as artstActvtyNm       
			,ARTST_ENGLS_NM          as artstEnglsNm       
			,ARTST_YOD               as artstYod
			,ARTST_ACTVTY_PART_CD    as artstActvtyPartCd      
			,ARTST_ACTVTY_NATN_CD    as artstActvtyNatnCd
			,ARTST_ACTVTY_CITY_CD    as artstActvtyCityCd
			,ARTST_SELF_INTRO        as artstSelfIntro
			,ARTST_WORK_IMG_URL      as artstWorkImgUrl
			,ARTST_PROFILE_IMG_URL   as artstProfileImgUrl
			,ARTST_HMPG_URL          as artstHmpgUrl
			,ARTST_PROMTN_VIDEO_URL  as artstPromtnVideoUrl
			,ARTST_FACEBOOK_URL      as artstFacebookUrl
			,ARTST_INSTAGRAM_URL     as artstInstagramUrl
			,DATE_FORMAT(REG_DT, '%Y.%m.%d') as regDate
			,UPDT_MBR_SQ             as updtMbrSq
			,(CASE
				WHEN USE_YN = 'Y' THEN '활동'
				WHEN USE_YN = 'N' THEN '비활동'
			END)                     as useYn
			,(CASE
				WHEN DEL_YN = 'Y' THEN '삭제'
				WHEN DEL_YN = 'N' THEN '유지'
			END)                     as delYn
		FROM TBL_DA_ARTST_M
		WHERE (USE_YN = 'Y' AND DEL_YN = 'N')
		AND (ARTST_ACTVTY_NM LIKE '%${keyword}%' OR ARTST_ACTVTY_PART_CD LIKE '%${keyword}%')
		limit ${indexNum}, ${postNum}
	</select> -->

	<select id="search" resultType="hashMap" parameterType="hashMap">
		SELECT
			 A.ARTST_SQ                as artstSq          
			,A.MBR_SQ                  as mbrSq          
			,A.ARTST_ACTVTY_NM         as artstActvtyNm       
			,A.ARTST_ENGLS_NM          as artstEnglsNm       
			,A.ARTST_YOD               as artstYod
			,A.ARTST_ACTVTY_PART_CD    as artstActvtyPartCd      
			,A.ARTST_ACTVTY_NATN_CD    as artstActvtyNatnCd
			,A.ARTST_ACTVTY_CITY_CD    as artstActvtyCityCd
			,A.ARTST_SELF_INTRO        as artstSelfIntro
			,A.ARTST_WORK_IMG_URL      as artstWorkImgUrl
			,A.ARTST_PROFILE_IMG_URL   as artstProfileImgUrl
			,A.ARTST_HMPG_URL          as artstHmpgUrl
			,A.ARTST_PROMTN_VIDEO_URL  as artstPromtnVideoUrl
			,A.ARTST_FACEBOOK_URL      as artstFacebookUrl
			,A.ARTST_INSTAGRAM_URL     as artstInstagramUrl
			,DATE_FORMAT(A.REG_DT, '%Y.%m.%d') as regDate
			,A.UPDT_MBR_SQ             as updtMbrSq
			,(CASE
				WHEN A.USE_YN = 'Y' THEN '활동'
				WHEN A.USE_YN = 'N' THEN '비활동'
			END)                     as useYn
			,(CASE
				WHEN A.DEL_YN = 'Y' THEN '삭제'
				WHEN A.DEL_YN = 'N' THEN '유지'
			END)                     as delYn
		FROM 	
			TBL_DA_ARTST_M AS A
		LEFT OUTER JOIN
		 	TBL_DA_MBR_M AS M
			ON 	A.MBR_SQ = M.MBR_SQ
		WHERE 
			1=1
			<!-- (A.USE_YN = 'Y' AND A.DEL_YN = 'N') -->
		<if test = "keyword != ''">
		AND (A.ARTST_ACTVTY_NM LIKE '%${keyword}%' OR A.ARTST_ACTVTY_PART_CD LIKE '%${keyword}%')		
		</if>
		
		<if test = "option != null">
		AND A.ARTST_ACTVTY_PART_CD IN
			<foreach collection="option" item="item" index="idex"  open="(" close=")" separator=",">
		    	 #{item}
		    </foreach>
		</if>

		<if test = "startDate != ''">
		AND (M.MBR_BIRTH BETWEEN #{startDate} AND #{endDate})		
		</if>
		
		limit ${indexNum}, ${postNum}
	</select>
	
	<select id="count" resultType="int" parameterType="hashMap">
		SELECT 
			COUNT(*) 
		FROM 
			TBL_DA_ARTST_M AS A
		LEFT OUTER JOIN
		 	TBL_DA_MBR_M AS M
			ON 	A.MBR_SQ = M.MBR_SQ 
		WHERE 
			1=1
			<!-- (A.USE_YN = 'Y' AND A.DEL_YN = 'N') -->
		<if test = "keyword != ''">	
		AND (A.ARTST_ACTVTY_NM LIKE '%${keyword}%' OR A.ARTST_ACTVTY_PART_CD LIKE '%${keyword}%')
		</if>
		
		<if test = "option != null">
		AND A.ARTST_ACTVTY_PART_CD IN 
			<foreach collection="option" item="item" index="idex"  open="(" close=")" separator=",">
		    	#{item}
		    </foreach>
		</if>
		<if test = "startDate != ''">
		AND (M.MBR_BIRTH BETWEEN #{startDate} AND #{endDate})	
		</if>
	</select>
	

	
	<select id="alphabet" resultType="hashMap" parameterType="hashMap">
		SELECT
			 ARTST_SQ                as artstSq          
			,MBR_SQ                  as mbrSq          
			,ARTST_ACTVTY_NM         as artstActvtyNm       
			,ARTST_ENGLS_NM          as artstEnglsNm       
			,ARTST_YOD               as artstYod
			,ARTST_ACTVTY_PART_CD    as artstActvtyPartCd      
			,ARTST_ACTVTY_NATN_CD    as artstActvtyNatnCd
			,ARTST_ACTVTY_CITY_CD    as artstActvtyCityCd
			,ARTST_SELF_INTRO        as artstSelfIntro
			,ARTST_WORK_IMG_URL      as artstWorkImgUrl
			,ARTST_PROFILE_IMG_URL   as artstProfileImgUrl
			,ARTST_HMPG_URL          as artstHmpgUrl
			,ARTST_PROMTN_VIDEO_URL  as artstPromtnVideoUrl
			,ARTST_FACEBOOK_URL      as artstFacebookUrl
			,ARTST_INSTAGRAM_URL     as artstInstagramUrl
			,DATE_FORMAT(REG_DT, '%Y.%m.%d') as regDate
			,UPDT_MBR_SQ             as updtMbrSq
			,(CASE
				WHEN USE_YN = 'Y' THEN '활동'
				WHEN USE_YN = 'N' THEN '비활동'
			END)                     as useYn
			,(CASE
				WHEN DEL_YN = 'Y' THEN '삭제'
				WHEN DEL_YN = 'N' THEN '유지'
			END)                     as delYn
		FROM TBL_DA_ARTST_M
		WHERE 
			1=1
			<!-- (USE_YN = 'Y' AND DEL_YN = 'N') -->
		AND ARTST_ACTVTY_NM LIKE CONCAT(#{keyword},'%')
		limit ${indexNum}, ${postNum}
	</select>
	
	<select id="alphabetCount" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM TBL_DA_ARTST_M 
		WHERE
			1=1 
			<!-- (USE_YN = 'Y' AND DEL_YN = 'N') -->
		AND ARTST_ACTVTY_NM LIKE CONCAT(#{keyword},'%')
	</select>
	
	<select id="korean" resultType="hashMap" parameterType="hashMap">
		SELECT
			 ARTST_SQ                as artstSq          
			,MBR_SQ                  as mbrSq          
			,ARTST_ACTVTY_NM         as artstActvtyNm       
			,ARTST_ENGLS_NM          as artstEnglsNm       
			,ARTST_YOD               as artstYod
			,ARTST_ACTVTY_PART_CD    as artstActvtyPartCd      
			,ARTST_ACTVTY_NATN_CD    as artstActvtyNatnCd
			,ARTST_ACTVTY_CITY_CD    as artstActvtyCityCd
			,ARTST_SELF_INTRO        as artstSelfIntro
			,ARTST_WORK_IMG_URL      as artstWorkImgUrl
			,ARTST_PROFILE_IMG_URL   as artstProfileImgUrl
			,ARTST_HMPG_URL          as artstHmpgUrl
			,ARTST_PROMTN_VIDEO_URL  as artstPromtnVideoUrl
			,ARTST_FACEBOOK_URL      as artstFacebookUrl
			,ARTST_INSTAGRAM_URL     as artstInstagramUrl
			,DATE_FORMAT(REG_DT, '%Y.%m.%d') as regDate
			,UPDT_MBR_SQ             as updtMbrSq
			,(CASE
				WHEN USE_YN = 'Y' THEN '활동'
				WHEN USE_YN = 'N' THEN '비활동'
			END)                     as useYn
			,(CASE
				WHEN DEL_YN = 'Y' THEN '삭제'
				WHEN DEL_YN = 'N' THEN '유지'
			END)                     as delYn
		FROM TBL_DA_ARTST_M
		WHERE 
			1=1
			<!-- (USE_YN = 'Y' AND DEL_YN = 'N') -->
			<choose>
				<when test="keyword == 'aaa'">
					AND (ARTST_ACTVTY_NM RLIKE '^(ㄱ|ㄲ)' OR (ARTST_ACTVTY_NM <![CDATA[>=]]> '가' AND ARTST_ACTVTY_NM <![CDATA[<]]> '나'))
				</when>
				<when test="keyword == 'bbb'">
					AND (ARTST_ACTVTY_NM RLIKE '^(ㄴ)' OR (ARTST_ACTVTY_NM <![CDATA[>=]]> '나' AND ARTST_ACTVTY_NM <![CDATA[<]]> '다'))
				</when>
				<when test="keyword == 'ccc'">
					AND (ARTST_ACTVTY_NM RLIKE '^(ㄷ|ㄸ)' OR (ARTST_ACTVTY_NM <![CDATA[>=]]> '다' AND ARTST_ACTVTY_NM <![CDATA[<]]> '라'))
				</when>
				<when test="keyword == 'ddd'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㄹ)' OR (ARTST_ACTVTY_NM >= '라' AND ARTST_ACTVTY_NM < '마'))]]>
				</when>
				<when test="keyword == 'eee'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅁ)' OR (ARTST_ACTVTY_NM >= '마' AND ARTST_ACTVTY_NM < '바'))]]>
				</when>
				<when test="keyword == 'fff'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅂ|ㅃ)' OR (ARTST_ACTVTY_NM >= '바' AND ARTST_ACTVTY_NM < '사'))]]>
				</when>
				<when test="keyword == 'ggg'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅅ|ㅆ)' OR (ARTST_ACTVTY_NM >= '사' AND ARTST_ACTVTY_NM < '아'))]]>
				</when>
				<when test="keyword == 'hhh'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅇ)' OR (ARTST_ACTVTY_NM >= '아' AND ARTST_ACTVTY_NM < '자'))]]>
				</when>
				<when test="keyword == 'iii'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅈ|ㅉ)' OR (ARTST_ACTVTY_NM >= '자' AND ARTST_ACTVTY_NM < '차'))]]>
				</when>
				<when test="keyword == 'jjj'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅊ)' OR (ARTST_ACTVTY_NM >= '차' AND ARTST_ACTVTY_NM < '카'))]]>
				</when>
				<when test="keyword == 'kkk'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅋ)' OR (ARTST_ACTVTY_NM >= '카' AND ARTST_ACTVTY_NM < '타'))]]>
				</when>
				<when test="keyword == 'lll'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅌ)' OR (ARTST_ACTVTY_NM >= '타' AND ARTST_ACTVTY_NM < '파'))]]>
				</when>
				<when test="keyword == 'mmm'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅍ)' OR (ARTST_ACTVTY_NM >= '파' AND ARTST_ACTVTY_NM < '하'))]]>
				</when>
				<when test="keyword == 'nnn'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅎ)' OR (ARTST_ACTVTY_NM >= '하'))]]>
				</when>
			</choose>
		limit ${indexNum}, ${postNum}
	</select>
	
	<select id="koreanCount" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM TBL_DA_ARTST_M 
		WHERE 
			1=1
			<!-- (USE_YN = 'Y' AND DEL_YN = 'N') -->
			<choose>
				<when test="keyword == 'aaa'">
					AND (ARTST_ACTVTY_NM RLIKE '^(ㄱ|ㄲ)' OR (ARTST_ACTVTY_NM <![CDATA[>=]]> '가' AND ARTST_ACTVTY_NM <![CDATA[<]]> '나'))
				</when>
				<when test="keyword == 'bbb'">
					AND (ARTST_ACTVTY_NM RLIKE '^(ㄴ)' OR (ARTST_ACTVTY_NM <![CDATA[>=]]> '나' AND ARTST_ACTVTY_NM <![CDATA[<]]> '다'))
				</when>
				<when test="keyword == 'ccc'">
					AND (ARTST_ACTVTY_NM RLIKE '^(ㄷ|ㄸ)' OR (ARTST_ACTVTY_NM <![CDATA[>=]]> '다' AND ARTST_ACTVTY_NM <![CDATA[<]]> '라'))
				</when>
				<when test="keyword == 'ddd'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㄹ)' OR (ARTST_ACTVTY_NM >= '라' AND ARTST_ACTVTY_NM < '마'))]]>
				</when>
				<when test="keyword == 'eee'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅁ)' OR (ARTST_ACTVTY_NM >= '마' AND ARTST_ACTVTY_NM < '바'))]]>
				</when>
				<when test="keyword == 'fff'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅂ|ㅃ)' OR (ARTST_ACTVTY_NM >= '바' AND ARTST_ACTVTY_NM < '사'))]]>
				</when>
				<when test="keyword == 'ggg'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅅ|ㅆ)' OR (ARTST_ACTVTY_NM >= '사' AND ARTST_ACTVTY_NM < '아'))]]>
				</when>
				<when test="keyword == 'hhh'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅇ)' OR (ARTST_ACTVTY_NM >= '아' AND ARTST_ACTVTY_NM < '자'))]]>
				</when>
				<when test="keyword == 'iii'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅈ|ㅉ)' OR (ARTST_ACTVTY_NM >= '자' AND ARTST_ACTVTY_NM < '차'))]]>
				</when>
				<when test="keyword == 'jjj'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅊ)' OR (ARTST_ACTVTY_NM >= '차' AND ARTST_ACTVTY_NM < '카'))]]>
				</when>
				<when test="keyword == 'kkk'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅋ)' OR (ARTST_ACTVTY_NM >= '카' AND ARTST_ACTVTY_NM < '타'))]]>
				</when>
				<when test="keyword == 'lll'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅌ)' OR (ARTST_ACTVTY_NM >= '타' AND ARTST_ACTVTY_NM < '파'))]]>
				</when>
				<when test="keyword == 'mmm'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅍ)' OR (ARTST_ACTVTY_NM >= '파' AND ARTST_ACTVTY_NM < '하'))]]>
				</when>
				<when test="keyword == 'nnn'">
					<![CDATA[AND (ARTST_ACTVTY_NM RLIKE '^(ㅎ)' OR (ARTST_ACTVTY_NM >= '하'))]]>
				</when>
			</choose>
	</select>
</mapper>